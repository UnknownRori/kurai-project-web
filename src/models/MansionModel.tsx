/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ./public/mansion.glb -o ./src/shared/MansionModel.tsx -t 
*/

import * as THREE from 'three';
import React from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Foundation: THREE.Mesh
    Cube: THREE.Mesh
    Clock_Tower: THREE.Mesh
    Clock: THREE.Mesh
    Hour_Handle: THREE.Mesh
    Minute_Hand: THREE.Mesh
    Sphere: THREE.Mesh
    Funnel: THREE.Mesh
    Cylinder001: THREE.Mesh
    Main_Door_1: THREE.Mesh
    Door_Handler001_1: THREE.Mesh
    Hall_1: THREE.Mesh
    Small_Window001_1: THREE.Mesh
    Small_Window002_1: THREE.Mesh
    Long_Big_Tower: THREE.Mesh
    Window_Long001: THREE.Mesh
    Window_Long003: THREE.Mesh
    Long_Big_Tower_1: THREE.Mesh
    Window_Long001_1: THREE.Mesh
    Window_Long003_1: THREE.Mesh
    Main_Door: THREE.Mesh
    Door_Handler001: THREE.Mesh
    Tall_Tower_1: THREE.Mesh
    Small_Window003: THREE.Mesh
    Small_Window004: THREE.Mesh
    Tower: THREE.Mesh
    Tower_Window_A: THREE.Mesh
    Tower_1: THREE.Mesh
    Tower_Window_A_1: THREE.Mesh
    Tower_2: THREE.Mesh
    Tower_Window_A_2: THREE.Mesh
    Tower_3: THREE.Mesh
    Tower_Window_A_3: THREE.Mesh
    Hall: THREE.Mesh
    Small_Window001: THREE.Mesh
    Small_Window002: THREE.Mesh
    Balcony: THREE.Mesh
    Half_Front_Garden: THREE.Mesh
    Cube001: THREE.Mesh
  }
  materials: {
    Material: THREE.MeshStandardMaterial
  }
  animations: unknown[] // Don't ask me
}

export type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>;

export function MansionModel(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/mansion.glb') as GLTFResult;

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Foundation.geometry} material={nodes.Foundation.material} position={[0, 3.518, 0]}>
        <group position={[1.33, 20.022, 44.433]}>
          <group position={[-66.936, 34.248, -72.49]}>
            <mesh geometry={nodes.Cube.geometry} material={nodes.Cube.material} position={[29.38, 36.462, -4.964]} scale={[21.438, 4.058, 5.248]} />
            <mesh geometry={nodes.Clock_Tower.geometry} material={nodes.Clock_Tower.material}>
              <mesh geometry={nodes.Clock.geometry} material={nodes.Clock.material} position={[0, 62.952, 14.435]} scale={10}>
                <mesh geometry={nodes.Hour_Handle.geometry} material={nodes.Hour_Handle.material} position={[0, 0.001, 0.122]} rotation={[0, 0, -0.995]} />
                <mesh geometry={nodes.Minute_Hand.geometry} material={nodes.Minute_Hand.material} position={[0, 0.001, 0.085]} />
                <mesh geometry={nodes.Sphere.geometry} material={nodes.Sphere.material} position={[0, 0, 0.058]} />
              </mesh>
            </mesh>
          </group>
          <group position={[0, 4.617, -83.92]} rotation={[Math.PI, 0, Math.PI]} scale={[1, 1.3, 1]}>
            <mesh geometry={nodes.Hall_1.geometry} material={materials.Material}>
              <mesh geometry={nodes.Small_Window001_1.geometry} material={nodes.Small_Window001_1.material} position={[41.315, 12.173, -15.223]} rotation={[-Math.PI, 0, Math.PI / 2]} />
              <mesh geometry={nodes.Small_Window002_1.geometry} material={nodes.Small_Window002_1.material} position={[-23.707, 12.173, -15.223]} rotation={[-Math.PI, 0, Math.PI / 2]} />
            </mesh>
            <mesh geometry={nodes.Main_Door_1.geometry} material={nodes.Main_Door_1.material} position={[-2.641, -7.874, -15.105]} rotation={[Math.PI, 0, Math.PI]}>
              <mesh geometry={nodes.Door_Handler001_1.geometry} material={nodes.Door_Handler001_1.material} position={[-0.718, 0, 0]} rotation={[0, 0, Math.PI / 2]} />
            </mesh>
          </group>
          <group position={[-18.524, 5.77, 9.41]}>
            <mesh geometry={nodes.Tower.geometry} material={nodes.Tower.material} scale={[1, 1, 1.75]}>
              <mesh geometry={nodes.Tower_Window_A.geometry} material={nodes.Tower_Window_A.material} position={[0, 10.831, 4.639]} />
            </mesh>
          </group>
          <group position={[19.874, 5.77, 9.41]}>
            <mesh geometry={nodes.Tower_1.geometry} material={nodes.Tower_1.material} scale={[1, 1, 1.75]}>
              <mesh geometry={nodes.Tower_Window_A_1.geometry} material={nodes.Tower_Window_A_1.material} position={[0, 10.831, 4.639]} />
            </mesh>
          </group>
          <group position={[37.827, 5.77, 9.41]}>
            <mesh geometry={nodes.Tower_2.geometry} material={nodes.Tower_2.material} scale={[1, 1, 1.75]}>
              <mesh geometry={nodes.Tower_Window_A_2.geometry} material={nodes.Tower_Window_A_2.material} position={[0, 10.831, 4.639]} />
            </mesh>
          </group>
          <group position={[-39.27, 5.77, 9.41]}>
            <mesh geometry={nodes.Tower_3.geometry} material={nodes.Tower_3.material} scale={[1, 1, 1.75]}>
              <mesh geometry={nodes.Tower_Window_A_3.geometry} material={nodes.Tower_Window_A_3.material} position={[0, 10.831, 4.639]} />
            </mesh>
          </group>
          <mesh geometry={nodes.Hall.geometry} material={materials.Material}>
            <mesh geometry={nodes.Small_Window001.geometry} material={nodes.Small_Window001.material} position={[41.315, 12.173, -15.223]} rotation={[-Math.PI, 0, Math.PI / 2]} />
            <mesh geometry={nodes.Small_Window002.geometry} material={nodes.Small_Window002.material} position={[-23.707, 12.173, -15.223]} rotation={[-Math.PI, 0, Math.PI / 2]} />
          </mesh>
          <mesh geometry={nodes.Funnel.geometry} material={nodes.Funnel.material} position={[26.962, 11.732, -15.823]}>
            <mesh geometry={nodes.Cylinder001.geometry} material={nodes.Cylinder001.material} position={[-3.582, 28.062, 0]} scale={[1, 1.572, 1]} />
          </mesh>
          <mesh geometry={nodes.Long_Big_Tower.geometry} material={nodes.Long_Big_Tower.material} position={[65.439, 13.458, -35.467]}>
            <mesh geometry={nodes.Window_Long001.geometry} material={nodes.Window_Long001.material} position={[0, 20.63, 63.31]} scale={[1.64, 1.44, 1]} />
            <mesh geometry={nodes.Window_Long003.geometry} material={nodes.Window_Long003.material} position={[0, 20.63, -63.19]} rotation={[Math.PI, 0, Math.PI]} scale={[1.64, 1.44, 1]} />
          </mesh>
          <mesh geometry={nodes.Long_Big_Tower_1.geometry} material={nodes.Long_Big_Tower_1.material} position={[-65.704, 14.115, -36.281]}>
            <mesh geometry={nodes.Window_Long001_1.geometry} material={nodes.Window_Long001_1.material} position={[0, 20.63, 63.31]} scale={[1.64, 1.44, 1]} />
            <mesh geometry={nodes.Window_Long003_1.geometry} material={nodes.Window_Long003_1.material} position={[0, 20.63, -63.19]} rotation={[Math.PI, 0, Math.PI]} scale={[1.64, 1.44, 1]} />
          </mesh>
          <mesh geometry={nodes.Main_Door.geometry} material={nodes.Main_Door.material} position={[-0.112, -7.687, 8.336]}>
            <mesh geometry={nodes.Door_Handler001.geometry} material={nodes.Door_Handler001.material} position={[-0.718, 0, 0]} rotation={[0, 0, Math.PI / 2]} />
          </mesh>
          <mesh geometry={nodes.Tall_Tower_1.geometry} material={nodes.Tall_Tower_1.material} position={[0, 32.45, -86.424]}>
            <mesh geometry={nodes.Small_Window003.geometry} material={nodes.Small_Window003.material} position={[-9.58, 39.63, 16.18]} scale={2} />
            <mesh geometry={nodes.Small_Window004.geometry} material={nodes.Small_Window004.material} position={[-9.58, 39.63, -16.25]} rotation={[-Math.PI, 0, 0]} scale={2} />
          </mesh>
        </group>
        <mesh geometry={nodes.Balcony.geometry} material={nodes.Balcony.material} position={[1.286, 20.062, 57.833]} scale={[19.063, 15.793, 15.793]} />
      </mesh>
      <mesh geometry={nodes.Half_Front_Garden.geometry} material={nodes.Half_Front_Garden.material} position={[-0.145, 0.276, 79.807]} scale={0.986} />
      <mesh geometry={nodes.Cube001.geometry} material={nodes.Cube001.material} position={[-0.012, 0.276, 139.609]} scale={[17.658, 0.398, 43.188]} />
    </group>
  );
}

useGLTF.preload('/mansion.glb');